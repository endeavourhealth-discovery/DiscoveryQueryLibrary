-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
-- Initialise
-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

use data_extracts;

drop procedure if exists CAB5_join_to_observations;
DELIMITER //
create procedure CAB5_join_to_observations()
BEGIN

	-- Pull back cohort into temp table with correct name for store proc
	drop table if exists cohort;
	create temporary table cohort as
	-- All GP person/patient/org combinaions in scope
	(
		select distinct a.patient_id, a.person_id, a.organization_id
		from F50_cab_candidate_cohort_all_GP_data as a 		-- all GP data in scope..
		inner join F50_cab_candidate_cohort_drug_excl as b 	-- ...filtered on those people still in cohort
			on a.person_id = b.person_id
	)
	union
	-- All Hospital person/patient/org combinations in scope
	(
		select distinct b.id as patient_id
		,	a.person_id
		,	b.organization_id

		from F50_cab_candidate_cohort_all_GP_data as a
		inner join ceg_compass_data.patient as b
			on a.person_id = b.person_id
			and b.organization_id in   (294564, -- Barts Health NHS Trust
										468127) -- Homerton University Hospital NHS Foundation Trust
		inner join F50_cab_candidate_cohort_drug_excl as c 	-- ...filtered on those people still in cohort
			on a.person_id = c.person_id
	);
	alter table cohort add index (person_id);
	alter table cohort add index (patient_id);
	alter table cohort add index (organization_id);

	-- Create table of all observations on the cohort (makes subsequent queries faster by "shrinking" the obs data)
	drop table if exists F50_cab_cohort_all_obs;
	call F50_get_all_obs_on_cohort(2500,'cohort','F50_cab_cohort_all_obs');

	-- some (very!) future dated observations.
	-- select max(clinical_effective_date) from F50_cab_cohort_all_obs;
	-- select * from F50_cab_cohort_all_obs where clinical_effective_date = '9999-12-31';

	-- initialise observations table
	drop table if exists F50_cab_observations_temp;
	create table F50_cab_observations_temp as select person_id, patient_id from cohort;
	alter table F50_cab_observations_temp add index (person_id);
	alter table F50_cab_observations_temp add index (patient_id);

	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- Batch up and process by codesets
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	-- INPUT DATASET(S): cohort / F50_cab_cohort_all_obs

	-- F50_join_to_observation stored proc INPUTS:
	-- codeset (varcar) - Codes to search for within the f50_add_obs_column stored proc
	-- column_name (varcar) - Name of new column to add
	-- table_name (varcar) - Table to add all this information to
	-- OUTPUTS: New copy of table_name with columns added

	-- OUTPUT DATASET: F50_cab_observations

	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- Demographics/Past Medical History Observations
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- CODESET: Smoking Include
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	call F50_join_to_observation
		(
			'8517006, 53896009, 56578002, 56771006, 59978006, 65568007, 77176002, 82302008, 134406006, 160603005, 160604004, 160605003, 160606002, 160612007, 160613002, 160616005, 160617001, 160619003, 160620009, 160621008, 160625004, 185790002, 225934006, 228486009, 230056004, 230057008, 230058003, 230059006, 230060001, 230062009, 230063004, 230064005, 230065006, 266918002, 266920004, 266921000, 266922007, 266923002, 266924008, 266925009, 266927001, 266928006, 266929003, 281018007, 308438006, 360890004, 360900008, 394871007, 394872000, 394873005, 401159003, 401201003, 413173009, 446172000, 449868002, 735112005, 735128000, 765001003, 48031000119106, 203191000000107, 428041000124106, 492191000000103, 716391000000109, 717771000000108, 836001000000109, 1092031000000108, 1092041000000104, 1092071000000105, 1092091000000109, 1092111000000104, 1092131000000107',
			'smoking_inc',
			'F50_cab_observations'
		);

	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- CODESET: Smoking Exclude
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	call F50_join_to_observation
		(
			'266919005, 221000119102',
			'smoking_exc',
			'F50_cab_observations'
		);

	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- CODESET: Diabetes Include
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	call F50_join_to_observation
		(
			'4855003, 5368009, 5969009, 8801005, 11530004, 44054006, 46635009, 49455004, 51002006, 70694009, 73211009, 75682002, 111552007, 127012008, 127013003, 127014009, 190368000, 190369008, 190372001, 190388001, 190389009, 190390000, 201724008, 230577008, 237599002, 237601000, 237604008, 237618001, 237619009, 268519009, 290002008, 313435000, 313436004, 314771006, 314893005, 314902007, 314903002, 314904008, 315051004, 395204000, 401110002, 407569005, 408540003, 413183008, 420270002, 420279001, 420436000, 420486006, 420514000, 420715001, 420756003, 420789003, 420825003, 420918009, 421075007, 421165007, 421326000, 421365002, 421468001, 421631007, 421750000, 421779007, 421847006, 421893009, 421920002, 421986006, 422034002, 422099009, 422228004, 426705001, 426875007, 443694000, 444073006, 445353002, 609561005, 609562003, 609572000, 703136005, 703137001, 703138006, 713702000, 713703005, 713705003, 713706002, 719216001, 735537007, 735538002, 735539005, 737212004, 739681000, 768792007, 768793002, 768794008, 1481000119100, 71771000119100, 82581000119105, 112991000000101, 335621000000101, 368561000119102, 368711000119106, 385041000000108, 716031000000106, 716911000000104, 717421000000100',
			'diabetes_inc',
			'F50_cab_observations'
		);

	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- CODESET: Diabetes Exclude
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	call F50_join_to_observation
		(
			'237613005, 284449005',
			'diabetes_exc',
			'F50_cab_observations'
		);

	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- CODESET: Hypertension Include
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	call F50_join_to_observation
		(
			'1201005, 8218002, 8762007, 9901000, 10562009, 10725009, 14973001, 18416000, 19769006, 23717007, 24042004, 26078007, 28119000, 31407004, 31992008, 34694006, 35303009, 37618003, 38341003, 39018007, 39727004, 46481004, 48146000, 48552006, 56218007, 57684003, 59621000, 59720008, 59997006, 63287004, 65402008, 65518004, 67359005, 69909000, 70272006, 71874008, 73410007, 74451002, 78975002, 81626002, 84094009, 86041002, 89242004, 111438007, 123799005, 123800009, 162659009, 169465000, 194783001, 194785008, 194788005, 194791005, 198942000, 198944004, 198945003, 198946002, 198947006, 198949009, 198951008, 198952001, 198953006, 198954000, 198997005, 198999008, 199000005, 199002002, 199003007, 199005000, 199007008, 199008003, 371125006, 397748008, 427889009, 428575007, 429457004, 443482000, 706882009, 712832005, 720568003, 762463000, 766937004, 40511000119107, 71421000119105, 71701000119105, 118781000119108, 132721000119104, 140101000119109, 140111000119107, 140121000119100, 140131000119102, 471521000000108, 716771000000106, 716821000000100, 717311000000102, 843821000000102, 843841000000109, 845891000000103, 846371000000103, 863191000000102, 908631000000108, 908651000000101, 10752641000119102, 10757401000119104, 16229371000119106',
			'htn_inc',
			'F50_cab_observations'
		);

	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- CODESET: Hypertension Exclude
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	call F50_join_to_observation
		(
			'23786008, 29259002, 72022006, 78808002',
			'htn_exc',
			'F50_cab_observations'
		);

	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- CODESET: IHD Include (Time dependent)
	-- This doesn't mean the patient is included in study, just that these codes are included in a search for evidence of IHD
	-- This applies to all IHD that can be acquired and so cannot be present pre cabergoline but can be afterwards
	-- These patients will be excluded later once we have found dates of IHD diagnosis
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	call F50_join_to_observation
		(
			'56265001, 127337006, 368009, 128238001, 53741008, 368009, 414545008, 414545008, 274096000, 42343007, 56265001, 128238001, 64715009, 414545008, 413439005, 53741008, 67189007, 414545008, 413439005, 413838009, 53741008, 13213009, 127337006, 413838009, 87837008, 194828000, 713405002, 64715009, 128238001, 713405002, 194828000, 414545008, 36221001, 274096000, 233817007, 315348000, 723448007, 54225002, 86234004, 27012009, 64715009, 233848004, 413439005, 67189007, 413838009, 87837008, 713405002, 66052004, 36221001, 83291003',
			'td_ihd_inc',
			'F50_cab_observations'
		);

	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- CODESET: IHD Include (Time independent)
	-- This doesn't mean the patient is included in study, just that these codes are included in a search for evidence of IHD
	-- This applies to all IHD that is intrinsic to the patient and so excludes them completely from the study, regardless of when the disease appear
	-- These patients will be excluded later but this data field is recorded for now as excluding them in the cohort selection would break MySQL
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	call F50_join_to_observation
		(
			'85598007, 274864009, 61179004, 4641009, 23685000, 4641009, 36222008, 13213009, 9241004, 60446003, 27012009, 128403000, 10753101000119102, 16573007, 45650007, 195033009, 312591002, 430401005, 27097002, 87648004, 16063004, 4641009, 430401005, 20005002, 12770006, 78485007, 36222008, 129604005, 23685000, 13213009, 60446003, 9241004, 722027009, 128562005, 237227006, 128403000, 998008, 45650007, 430401005, 195033009, 430401005, 312591002, 111284004, 430401005, 191372008, 430401005, 87648004, 191372008, 16063004, 12770006',
			'ti_ihd_inc',
			'F50_cab_observations'
		);

	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- CODESET: Carcinoid
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	call F50_join_to_observation
		(
			'443492008,443492008,237833006,35868009,253002004,714810002,254627002,36222008,714810002,425318003,254627002,445238008,713306000,425318003,705176003,443492008,713306000,445238008,276808007,253002004,254613007,734884008,705176003,276808007,237833006,253003009,276816003,734884008,253002004,254613007,276816003,35868009,714810002,276818002,726654006,276819005,254627002,36222008,276819005,425318003,726654006,276818002,726652005,314947008,713573006,713574000,314947008,713574000,726652005,709830006,713573006,713306000,35868009,445238008,705176003,276808007,726653000,709830006,35868009,253003009,726653000,253002004,254613007,276816003,428701004,428701004,709517003,276818002,726654006,709517003,276819005,713574000,726652005,314947008,713573006,703255000,709830006,703255000,726653000,714811003,714811003,734884008,703322008,428701004,734884008,703322008,709517003,703255000,714811003,734884008,703322008,703321001,703321001,703321001',
			'carc_inc',
			'F50_cab_observations'
		);

	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- Diagnosis Codes
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- CODESET: Prolactinoma
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	call F50_join_to_observation
		(
			'134209002',
			'prolactinoma',
			'F50_cab_observations'
		);

	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- CODESET: Hyperprolactinaemia
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	call F50_join_to_observation
		(
			'237662005',
			'hyperprolactinaemia',
			'F50_cab_observations'
		);


	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- CODESET: Parkinson's
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	call F50_join_to_observation
		(
			'4223005,15782007,19972008,32798002,38523005,49049000,51100001,62239001,72820004,230291001,230292008,230293003,230294009,230296006,265377002,425390006,438513002,698279003,702323008,702429008,715345007,715737004,716662004,720466001,722435003,722556003,722558002,722763000,722964001,723992000,724546003,724761004,724762006,724763001,724823008,725146001,766872002,101421000119107,341551000000108',
			'parkinsons',
			'F50_cab_observations'
		);

	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- CODESET: Restless Leg
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	call F50_join_to_observation
		(
			'32914008,722963007',
			'restless_legs',
			'F50_cab_observations'
		);


	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- Outcome Observations
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- CODESET: Echos (occurrence, NOT diagnosis)
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	call F50_join_to_observation(
		'169240004,169241000,408380008,169240004,169241000,408380008,414072005,407596008,407597004,414072005,407596008,407597004,40701008,105376000,105376000,433033007,431343007,434158009,431488007,433862009,434158009,445864005,760361000000100,760361000000100',
		'echo',
		'F50_cab_observations'
	);


	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- CODESET: Heart Failure Dx (Snomed, so GP input)
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	call F50_join_to_observation(
		'364006,5053004,5375005,10091002,10335000,10633002,25544003,42343007,56675007,60856006,66989003,74960003,80479009,82523003,83291003,84114007,85232009,88805009,88805009,92506005,111283005,128404006,233924009,314206003,359617009,417996009,418304008,424404003,441481004,441530006,443253003,443254009,443343001,443344007,446221000,609389009,698296002,698594003,703272007,717840005,67431000119105,67441000119101,96311000119109,120851000119104,120861000119102,120871000119108,120881000119106,120891000119109,120901000119108',
		'gp_heart_failure',
		'F50_cab_observations'
	);


	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- CODESET: Valve replacement surgery (Procedure codes)
	-- Need to investigate where these appear in the data, i.e. are they hospital OPCS codes?! Are they transformed?
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	call F50_join_to_observation(
		'1770009,21849008,26212005,34068001,39717005,53059001,71492005,73470004,73544002,81762006,85830006,87123001,112815000,112816004,118798003,119768002,119769005,174966008,174980001,232740008,232744004,232768007,232772006,232778005,232779002,232782007,232808000,232811004,232816009,232820008,232827006,232830004,232854009,232855005,232867007,232872003,232873008,232874002,232919001,307799000,310395004,310396003,310476005,310477001,384641003,384642005,384643000,386749005,450938008',
		'valve_replacement',
		'F50_cab_observations'
	);

	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- CODESET: Valvular disease
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	call F50_join_to_observation(
		'368009,8722008,11851006,20721001,40445007,44241007,48724000,49915006,56786000,60234000,60573004,67754003,70320004,72352009,76267008,79619009,92830003,195002007,250978003,250979006,253383003,253595004,253612007,398995000,409712001,417094009,417191003,426611007,471858004,697927009',
		'valvular_disease',
		'F50_cab_observations'
	);

	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- CODESET: HF Admissions
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	select ('HF Admissions - RUNNING...') as status_update;
	drop table if exists F50_cab_obs_temp;
	create temporary table F50_cab_obs_temp as
	SELECT a.*,
		b.hf_admission_earliest
		FROM F50_cab_observations a
		LEFT JOIN (
					select patient_id
						, 	min(clinical_effective_date) as hf_admission_earliest
					from F50_cab_cohort_all_obs
					where organization_id in (294564, 468127)
					-- assumes that ICD10 codings indicate that HF was at least one of the reasons for admission
					and original_code in ('ICD10_I50','ICD10_I50.0','ICD10_I50.1','ICD10_I50.9')
					group by patient_id
				) b ON a.patient_id = b.patient_id;

	drop table if exists F50_cab_observations;
	create table F50_cab_observations as
		SELECT * from F50_cab_obs_temp;
	alter table F50_cab_observations add index (patient_id);


	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- Soft Markers
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- Serum Prolactin Level
	-- Uses concept_id 1027171000000101 and returns maximum recorded value of this for any patient along with the date this was recorded
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	-- create temp table
    select ('Serum prolactin - RUNNING...') as status_update;
	drop table if exists F50_cab_obs_temp;
	create temporary table F50_cab_obs_temp as
	SELECT a.*
	,	b.prolactin_result_earliest
		FROM F50_cab_observations a
		LEFT JOIN (
					select patient_id
						,	max(coalesce(result_value,0)) as prolactin_result_maximum
						,	min(coalesce(result_value,0)) as prolactin_result_minimum
						,	min(clinical_effective_date) as prolactin_result_earliest
						,	max(clinical_effective_date) as prolactin_result_latest
						,	count(clinical_effective_date) as prolactin_result_count
					from ceg_compass_data.observation
					WHERE snomed_concept_id = '1027171000000101'
					GROUP BY patient_id
				) b
		ON a.patient_id = b.patient_id;

	-- update master
	drop table if exists F50_cab_observations;
	create table F50_cab_observations as
		select * from F50_cab_obs_temp;
	alter table F50_cab_observations add index (patient_id);


	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- Parkinson's Drug Marker
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    select ('Parkinsons meds - RUNNING...') as status_update;
	drop table if exists F50_cab_obs_temp;
	create temporary table F50_cab_obs_temp as
	SELECT a.*,
		b.parkinsons_drug_marker_earliest
		FROM F50_cab_observations a
		LEFT JOIN (
				select patient_id
					, 	min(clinical_effective_date) as parkinsons_drug_marker_earliest
				from ceg_compass_data.medication_order
				WHERE dmd_id IN (404830004,377270003,377269004,377268007,323119000,981311000001100,1023311000001100,32654111000001108,34963911000001105,14054611000001101,34963811000001100,34963711000001108,1280911000001105,5509511000001103,977011000001103,1162811000001100,1114811000001105,34682811000001105,1012911000001101,8427511000001100,11815111000001106,8427111000001109,8427411000001104,8427311000001106,8427211000001103,8427611000001101,681211000001109,798011000001101,229011000001107,33937911000001106,33938311000001106,33938511000001100,14034511000001101,32650211000001105,32654011000001107,34679711000001101,33937211000001102,8401911000001109,11804111000001105,5511111000001105,8401311000001108,13252401000001102,8404211000001103,8402811000001108,5510211000001105,13253501000001106,8403711000001108,8404711000001105,33578311000001102,33578111000001104,33518211000001104,21995411000001109,34166911000001102,21310111000001100,981311000001100,27876511000001101,34963811000001100,32654111000001108,14054611000001101,15436311000001102,1280911000001105,1023311000001100,5509511000001103,34963911000001105,34963711000001108,22633111000001108,1114811000001105,1012911000001101,34682811000001105,977011000001103,32649911000001109,22632911000001104,1162811000001100,8427311000001106,8427411000001104,8427511000001100,8427111000001109,11815111000001106,8427611000001101,8427211000001103,10161711000001105,412311000001109,44211000001105,325211000001106,33938511000001100,33937911000001106,22010411000001107,22009911000001108,14034511000001101,15424411000001104,32650211000001105,33938311000001106,33938111000001109,33937411000001103,32654011000001107,34679711000001101,33938411000001104,14034611000001102,32650311000001102,33938611000001101,18036811000001106,18036811000001106,323108003,323109006,323107008,11814911000001105,5388311000001104,5386811000001107,11815011000001105,985211000001106,5386211000001106,1108711000001107,20594211000001106,1093911000001109,16547411000001100,16547211000001104,11804711000001106,16546911000001105,11804411000001100,20590011000001108,13188801000001108,11814911000001105,5386811000001107,5388311000001104,11815011000001105,5386211000001106,1108711000001107,20594211000001106,323112009,985211000001106,1093911000001109,323110001,16547411000001100,11804711000001106,16547211000001104,11804811000001103,16546911000001105,16547511000001101,16547311000001107,11804411000001100,20590011000001108,13188801000001108,16547011000001109,11804511000001101,20590111000001109,16730911000001109,16730711000001107,13176711000001109,5387611000001105,16730511000001102,1275311000001107,11804911000001108,10536911000001101,11804611000001102,16541511000001107,1270711000001101,10536911000001101,1311611000001100,20590211000001103,1270711000001101,1311611000001100,11804811000001103,16547511000001101,16547311000001107,11804511000001101,16547011000001109,16730911000001109,5387611000001105,13176711000001109,20590111000001109,16730711000001107,1275311000001107,16730511000001102,11804911000001108,16731011000001101,16730811000001104,16730611000001103,16541511000001107,11804611000001102,20590211000001103,16731011000001101,16730811000001104,16730611000001103,1303511000001100,963611000001107,1100111000001100,13045511000001100,1236011000001100,20981011000001100,13045411000001100,35938811000001100,1262611000001100,20980811000001100,442011000001102,632711000001102,13029411000001100,32707811000001100,13028911000001100,216711000001108,1296311000001100,416111000001106,416711000001107,1100111000001100,963611000001107,1303511000001100,13045511000001100,35938811000001100,1262611000001100,20981011000001100,10442011000001100,13045411000001100,1236011000001100,20980811000001100,10441811000001100,254611000001100,104311000001103,13029411000001100,84611000001103,136111000001100,21895811000001100,13029511000001100,32707811000001100,13028911000001100,32707911000001100,668011000001108,13029211000001100,475211000001103,313311000001106,1296311000001100,26784611000001100,26785111000001100,216711000001108,491211000001107,254611000001100,303611000001104,416111000001106,416711000001107,13029611000001100,10442011000001100,10442111000001100,435811000001100,136111000001100,13029311000001100,30913711000001100,10441911000001100,32708011000001100,10441811000001100,30913911000001100,2479911000001100,2480611000001100,2482211000001100,8826511000001100,3186311000001100,13029511000001100,21895811000001100,21895911000001100,32707911000001100,13029211000001100,2480111000001100,668011000001108,2479311000001100,313311000001106,475211000001103,26784711000001100,2482011000001100,2479511000001100,26784611000001100,17927611000001100,26785311000001100,491211000001107,26785111000001100,2481011000001100,17927811000001100,2479711000001100,2481611000001100,303611000001104,2479911000001100,10442111000001100,435811000001100,104311000001103,13029611000001100,32708011000001100,30913711000001100,33613511000001100,15243511000001102,9362511000001102,15243611000001103,30296111000001103,15240411000001109,35180311000001108,31056211000001102,15240711000001103,33613611000001101,32639411000001100,32895011000001105,15243511000001102,9362511000001102,33723511000001104,32639211000001104,30828811000001109,35036511000001102,33613511000001100,15243611000001103,34937211000001100,35650211000001108,30296111000001103,35180411000001101,35180311000001108,15240411000001109,36871111000001104,15240511000001108,15240711000001103,32450811000001108,31056211000001102,30334211000001101,15240811000001106,32639411000001100,32895011000001105,33723511000001104,32639211000001104,15240611000001107,35036511000001102,30828911000001104,30828811000001109,35036611000001103,37139011000001107,33613611000001101,15240911000001101,35650211000001108,34937211000001100,34937311000001108,35180411000001101,34019211000001109,15240511000001108,36871111000001104,36871211000001105,32450811000001108,32451011000001106,30296211000001109,30334211000001101,15240811000001106,35036611000001103,30538511000001107,30828911000001104,15240611000001107,37139211000001102,32639511000001101,31056311000001105,37139011000001107,15240911000001101,34937311000001108,33723611000001100,32895111000001106,32639311000001107,34019211000001109,36871211000001105,32451011000001106,30296211000001109,35650311000001100,30538511000001107,37139211000001102,30334311000001109,32639511000001101,31056311000001105,32895111000001106,32639311000001107,33723611000001100,35650311000001100,34019311000001101,30541511000001103,30334311000001109,30541511000001103,34019311000001101,28979111000001100,1041411000001105,1107411000001100,1183311000001101,26614711000001101,28979211000001106,36621211000001104,28979111000001100,24674111000001104,35899611000001103,1041411000001105,1107411000001100,37105411000001106,1183311000001101,28979311000001103,28979211000001106,1112611000001103,26615111000001103,1112611000001103,36621211000001104,36621311000001107,28040411000001107,24674111000001104,24674511000001108,36801511000001103,35899611000001103,37105411000001106,37105511000001105,37032011000001105,27888811000001107,28979311000001103,28040411000001107,36621311000001107,28040511000001106,24674511000001108,36801511000001103,27889211000001101,26614911000001104,27924411000001104,37105511000001105,37032011000001105,37033111000001100,37033311000001103,24674911000001101,28040711000001101,28040511000001106,28040611000001105,26614711000001101,27924411000001104,27924511000001100,37033311000001103,37033111000001100,28040811000001109,24674911000001101,28040611000001105,36801611000001104,28040711000001101,28037611000001108,26615111000001103,27924511000001100,28040811000001109,36801611000001104,28035311000001106,27924911000001107,27888811000001107,28037611000001108,27889211000001101,26614911000001104,28035311000001106,27924911000001107,14960411000001107,14960211000001108,14960011000001103,3897811000001100,17335511000001109,5416711000001106,3890511000001102,5416011000001109,1175611000001100,10422111000001108,3888211000001101,1290011000001107,3888411000001102,1082811000001108,15227311000001103,32696211000001100,16090811000001107,15227411000001105,14956611000001103,14958311000001107,14957411000001104,17315011000001106,15176511000001109,29184411000001100,33615311000001107,29184311000001107,13639711000001102,32680311000001109,15435211000001104,15435011000001109,15435411000001100,13639911000001100,13639811000001105,14960611000001105,14960111000001102,15176811000001107,14960311000001100,3890211000001100,3888611000001104,14953611000001109,20590711000001105,20169411000001102,20105011000001108,14952911000001105,16445911000001107,13189311000001107,14956811000001104,20104511000001101,20591211000001109,3897811000001100,14953211000001107,14957211000001103,20104711000001106,10421411000001108,20591511000001107,10420711000001105,1290011000001107,969611000001109,1082811000001108,3888411000001102,1175611000001100,3888211000001101,10422111000001108,17335511000001109,3890511000001102,5416711000001106,5416011000001109,20012411000001101,30094511000001105,30094311000001104,30094011000001102,20012611000001103,20012211000001100,15227311000001103,13963811000001104,16087411000001105,32696211000001100,16090811000001107,15508211000001105,15227411000001105,15507911000001102,14958311000001107,14957411000001104,18467611000001107,27843211000001107,15022111000001106,18467411000001109,15022411000001101,15021911000001103,14956611000001103,35129111000001107,21886511000001105,21886311000001104,21883511000001102,35128911000001102,35128711000001104,17315011000001106,19560711000001109,15176511000001109,19784011000001101,13133011000001101,19831311000001107,19832111000001100,19831111000001105,19830211000001105,18344411000001103,3663311000001108,13126811000001100,13133011000001101,18344911000001106,16174611000001102,3661411000001100,18344611000001100,3662611000001108,16174811000001103,16174511000001101,3661511000001101,13126911000001105,18045511000001102,3662711000001104,18045411000001101,18298911000001101,18307711000001106,35175211000001103,18299811000001104,18308011000001105,35175411000001104,35175611000001101,18598111000001105,18599611000001106,18598711000001106,18598311000001107,16174711000001106,16174911000001108,36354911000001104,23423011000001101,36355811000001105,3663311000001108,18552011000001101,36353811000001106,18551711000001106,23423211000001106,19832211000001106,23423411000001105,19830611000001107,18551411000001100,23423611000001108,24655311000001101,36357411000001102,36354211000001108,16162511000001104,13126811000001100,3661411000001100,34816911000001108,20580811000001101,20579811000001101,20578611000001109,16174611000001102,3662611000001108,3661511000001101,18045511000001102,18045411000001101,18042511000001108,34815711000001103,18042211000001105,3662711000001104,34817911000001106,13126911000001105,16174811000001103,34816511000001101,16174511000001101,16162811000001101,34816111000001105,16162211000001102,18606311000001101,18298911000001101,21288211000001101,35175311000001106,29697411000001105,18299811000001104,21849511000001109,35175211000001103,18308011000001105,21289011000001101,18307711000001106,21288511000001103,21297011000001106,36818711000001100,29697211000001106,29696911000001100,35175511000001100,35175611000001101,35175411000001104,21849711000001104,21850311000001109,21850011000001106,36352811000001103,15359411000001105,14946911000001107,36324111000001103,10372501000001105,9444001000001102,9341401000001101,9341501000001102,9489501000001100,10372501000001105,9341401000001101,9341501000001102,9489501000001100,9444001000001102,16243911000001107,13204311000001105,16244111000001106,5581211000001101,16243911000001107,16244111000001106,13204311000001105,5584311000001107,14001211000001107,14001411000001106,16677311000001102,5584511000001101,16244311000001108,5412311000001108,14002011000001105,18189311000001106,5581211000001101,5412311000001108,16188611000001100,10507811000001102,18188911000001104,21694611000001107,562411000001105,16677711000001103,14001711000001100,790711000001101,16244211000001100,236411000001107,5581411000001102,14709111000001104,5581711000001108,18189611000001101,5412611000001103,13204411000001103,16244011000001105,14708611000001103,826111000001108,13884411000001105,18189811000001102,5584411000001100,16244211000001100,5412111000001106,10472311000001106,13204411000001103,16244011000001105,210411000001104,14708611000001103,14001511000001105,16677411000001109,16677311000001102,14709111000001104,16244311000001108,5412611000001103,14001311000001104,17451911000001109,10472111000001109,17451711000001107,16244411000001101,18266211000001107,5395411000001100,5584611000001102,14361611000001109,242011000001103,5412111000001106,14002311000001108,13167211000001107,16188611000001100,14001211000001107,5584311000001107,16188711000001109,18189311000001106,14001411000001106,21694711000001103,18188911000001104,17452111000001101,21694611000001107,18205811000001104,16677711000001103,30212911000001103,18189411000001104,14247611000001100,5412411000001101,10507911000001107,16677811000001106,17452511000001105,5395411000001100,5584511000001101,14001911000001103,5412711000001107,14709611000001107,9480801000001107,9480801000001107,16207111000001108,10490011000001100,16207311000001105,10489511000001101,16584611000001104,13933211000001108,13932711000001109,16584411000001102,5390511000001106,17584511000001104,17584111000001108,5481111000001104,16207111000001108,16207211000001102,3661711000001106,10490211000001105,10541111000001109,13127011000001109,14711311000001104,3663011000001105,16207411000001103,16207311000001105,10489611000001102,10490411000001109,3663411000001101,14711811000001108,10489711000001106,16584711000001108,16584611000001104,13933311000001100,16584511000001103,16584411000001102,16556211000001103,13932911000001106,18295011000001108,13933411000001107,13933011000001103,16555911000001100,16555711000001102,19970511000001100,17584611000001100,5390711000001101,10541111000001109,19970911000001107,19969711000001107,17584511000001104,19969911000001109,19970711000001105,19970111000001109,19970311000001106,5390511000001106,5481111000001104,17584211000001102,36815911000001109,17584111000001108,5481311000001102,10541411000001104,17584811000001101,10541211000001103,10541311000001106,16207211000001102,17584411000001103,16207411000001103,19617211000001106,14711411000001106,14711511000001105,19616811000001105,10490011000001100,19616611000001106,14711911000001103,10489511000001101,19617411000001105,19617011000001101,14712011000001105,16584711000001108,18295011000001108,18566411000001103,16556211000001103,16556311000001106,16584511000001103,18566011000001107,18565611000001105,18566611000001100,18565811000001109,16555911000001100,3663411000001101,16556411000001104,16556011000001108,16162611000001100,16556111000001109,19970511000001100,16555811000001105,16555711000001102,3663011000001105,13127011000001109,19970611000001101,3661711000001106,19971011000001104,4014611000001105,12645811000001104,8583711000001100,12645911000001109,8583611000001109,12608811000001103,8565411000001108,8564911000001104,12608511000001101,12645811000001104,4014611000001105,8583711000001100,8583611000001109,12645911000001109,4015311000001101,12608811000001103,8565411000001108,12608911000001108,8564911000001104,8565611000001106,12608511000001101,8565011000001104,12608611000001102,4014711000001101,4015011000001104,12609011000001104,8565811000001105,12608711000001106,8565111000001103,4015411000001108,4015011000001104,13648111000001109,5322311000001108,12608911000001108,5322511000001102,8565611000001106,4014711000001101,12608611000001102,8565011000001104,15457511000001109,4014811000001109,5322411000001101,4015211000001109,19744111000001107,15457411000001105,4015311000001101,12609011000001104,8565811000001105,8565111000001103,12608711000001106,4015211000001109,13644611000001106,5299311000001100,13644711000001102,5299411000001107,5298111000001109,5301111000001105,15440611000001106,5298211000001103,4014811000001109,15440111000001103,19701311000001100,15440711000001102,5301411000001100,15440211000001109,19701411000001107,4015411000001108)
				GROUP BY patient_id
				) b
		ON a.patient_id = b.patient_id;

	drop table if exists F50_cab_observations;
	create table F50_cab_observations as
		SELECT * from F50_cab_obs_temp;
	alter table F50_cab_observations add index (patient_id);

	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- HF meds soft marker
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	select ('HF meds - RUNNING...') as status_update;
	drop table if exists F50_cab_obs_temp;
	create temporary table F50_cab_obs_temp as
	SELECT a.*,
		b.hf_drug_marker_earliest
		FROM F50_cab_observations a
		LEFT JOIN (
					select patient_id
						, 	min(clinical_effective_date) as hf_drug_marker_earliest
					from ceg_compass_data.medication_order
					WHERE dmd_id IN (81609008,18370211000001106,317971007,317972000,317973005,398924008,720443002,398668007,398666006,19309711000001101,19309911000001104,147711000001102,418651003,229711000001109,12036811000001103,12088911000001100,8519911000001102,18370211000001106,13893411000001108,12087311000001102,12035811000001106,12088711000001102,12088111000001103,1126611000001106,1127411000001105,12086511000001106,12087711000001103,12036611000001102,12035011000001100,12086911000001104,12036211000001104,12035611000001107,12088511000001107,12086711000001101,12035411000001109,12034811000001105,12087511000001108,12037011000001107,4325111000001109,12088311000001101,12089011000001109,12035911000001101,8520011000001100,12036011000001109,12087411000001109,1189211000001106,13893511000001107,12036911000001108,12036411000001100,12087911000001101,1253311000001108,992711000001109,12087811000001106,12036311000001107,1318611000001108,950211000001106,12086611000001105,12088811000001105,12036711000001106,12087011000001100,12088611000001106,12087111000001104,12035111000001104,12035211000001105,12088211000001109,12035711000001103,12036111000001105,12087611000001107,12088411000001108,662811000001104,12037211000001102,12088011000001104,12086811000001109,12034911000001100,864611000001104,12036511000001101,12035511000001108,472211000001108,12028611000001103,12087211000001105,17211000001105,12063011000001108,12035311000001102,12010511000001107,8491611000001101,12045311000001101,13880611000001101,12047811000001100,12024711000001104,12053811000001108,12062711000001102,12050811000001101,12015411000001101,12007811000001107,12042411000001100,752711000001106,12009611000001103,12039211000001108,12009911000001109,12018211000001107,13929005,398666006,318057004,318056008,318058009,420285008,13353711000001106,13385311000001101,13385711000001102,13895011000001103,13354711000001108,398688006,13384711000001101,13374111000001105,13894711000001100,13894911000001103,13354511000001103,13325611000001102,1301111000001106,951511000001102,1042111000001105,13354311000001109,13894811000001108,1266311000001105,13385111000001103,13326411000001109,13373911000001106,8726311000001103,13326211000001105,1043911000001101,13353511000001101,13325411000001100,13353811000001103,13374211000001104,13894611000001109,13385811000001105,13353911000001108,13384811000001109,13326011000001100,13354111000001107,13384911000001104,13385511000001107,10766511000001100,13385411000001108,1261411000001109,13354811000001100,1291611000001105,13354911000001105,1323911000001103,10480211000001106,1048011000001107,13374011000001109,8727011000001103,13325011000001109,13325711000001106,13385211000001109,13325211000001104,13325811000001103,1033711000001104,13326511000001108,8726511000001109,13354611000001104,8726411000001105,8727311000001100,13354411000001102,13374311000001107,13355011000001105,8727611000001105,13385011000001104,13354211000001101,13385611000001106,13325511000001101,13326311000001102,13354011000001106,13326111000001104,13353611000001102,13325111000001105,13382211000001104,13325911000001108,13887411000001100,13325311000001107,13351511000001100,13340111000001100,82311000001101,330511000001102,13383511000001108,13374411000001100,13380011000001105,13361011000001104,610611000001103,13381611000001108,13320611000001105,13350911000001100,13887911000001108,13888911000001109,13323411000001104,13357511000001106,13350311000001101,13888611000001103,13347811000001106,196711000001105,402111000001109,979611000001100,1060011000001103,30798811000001102,274211000001100,102011000001107,30796611000001102,13187611000001107,13188011000001104,539611000001107,979611000001100,1060011000001103,22623011000001105,14106711000001100,14106511000001105,10385911000001101,10386311000001107,22622811000001107,30798811000001102,476011000001104,731811000001106,21804811000001102,21805011000001107,1141211000001104,912611000001101,689011000001100,13187911000001101,443511000001103,13188211000001109,13187611000001107,13188011000001104,30796611000001102,629311000001107,43411000001106,30796711000001106,29776111000001100,9793511000001108,376211000001101,1204611000001105,35912911000001108,29775711000001107,539611000001107,543811000001108,196711000001105,402111000001109,226011000001101,22622911000001102,14106511000001105,10386311000001107,14106611000001109,22623111000001106,14106911000001103,14106711000001100,10386511000001101,10386111000001105,10385911000001101,30004711000001103,37046811000001102,30796811000001103,1344311000001104,1348511000001103,716011000001104,21805011000001107,21805111000001108,21804811000001102,21804911000001107,689011000001100,912611000001101,1141211000001104,19703711000001100,13187911000001101,629311000001107,13188211000001109,9793511000001108,443511000001103,376211000001101,29776111000001100,17810611000001109,29775911000001109,29775711000001107,4451211000001106,35912911000001108,16664411000001109,31353511000001106,1204611000001105,43411000001106,29776211000001106,17810911000001103,30796711000001106,1348311000001109,1343411000001108,15247111000001103,543811000001108,226011000001101,11555811000001108,15051211000001106,731811000001106,10386511000001101,2376811000001101,3700111000001100,16278111000001100,3700711000001100,3699411000001100,5592211000001100,5592411000001100,11415211000001100,3700111000001100,11415011000001100,3700711000001100,16278111000001100,30102211000001100,3699411000001100,5634311000001100,5634511000001100,5889911000001100,15231511000001100,11415211000001100,5895511000001100,15231311000001100,11415011000001100,30102311000001100,30102211000001100,5634411000001100,5634311000001100,5634511000001100,5592311000001100,5893411000001100,15231611000001100,15231511000001100,5889911000001100,15231411000001100,5895511000001100,5896611000001100,15231311000001100,5592511000001100,30102311000001100,5592211000001100,11415311000001100,5592411000001100,11415111000001100,5634411000001100,15231611000001100,15231411000001100,5634611000001100,11415311000001100,11415111000001100,5634611000001100,5893411000001100,5896611000001100,5592311000001100,5592511000001100,24502211000001102,21574511000001105,13006311000001109,13005711000001100,24501911000001100,1245311000001106,13005811000001108,13006411000001102,13005911000001103,21574811000001108,13005511000001105,13006011000001106,12951211000001100,13005611000001109,12953411000001102,24502311000001105,12951911000001109,12950911000001102,12953111000001107,20528011000001103,24502011000001107,12950611000001108,12951511000001102,24502211000001102,13006111000001107,12950311000001103,21574511000001105,13006311000001109,13005711000001100,1245311000001106,24501911000001100,13005911000001103,13005811000001108,13006211000001101,13006411000001102,21574811000001108,13005511000001105,13006011000001106,13005611000001109,12952611000001109,12953411000001102,12951211000001100,24502411000001103,12953511000001103,12951311000001108,24502311000001105,12951911000001109,24502111000001108,12952311000001104,12950911000001102,12953111000001107,12951011000001105,12952111000001101,12950611000001108,20528011000001103,24502011000001107,12953211000001101,12950711000001104,12951511000001102,12951611000001103,13006111000001107,12950311000001103,12950411000001105,12953611000001104,12951411000001101,13006211000001101,12952211000001107,12951111000001106,12953311000001109,12950811000001107,20528111000001102,24502411000001103,12951711000001107,12952611000001109,12951311000001108,12950511000001109,12952711000001100,12953511000001103,24502111000001108,12952311000001104,12952411000001106,12952111000001101,12953211000001101,12951011000001105,12950711000001104,12951611000001103,12950411000001105,12952811000001108,12951411000001101,12953611000001104,12951111000001106,12953311000001109,12952211000001107,12952511000001105,20528111000001102,12950811000001107,12951711000001107,12952711000001100,12950511000001109,12952411000001106)
					GROUP BY patient_id
				) b
				ON a.patient_id = b.patient_id;

	drop table if exists F50_cab_observations;
	create table F50_cab_observations as
		SELECT * from F50_cab_obs_temp;
	alter table F50_cab_observations add index (patient_id);

	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	-- AGGREGATE: Group up to the person level
	-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	-- add echo count manually (as requires some deduplication across people that store proc doesn't do)
	-- ASSSUMPTION: same snomed on the same person on the same day is a duplicate
	drop table if exists echos;
	create temporary table echos as
	select a.person_id
	,	obs.clinical_effective_date
	,	snomed_concept_id
	,	count(*) as num_dupes

	from cohort as a
	inner join F50_cab_cohort_all_obs as obs
		on a.patient_id = obs.patient_id
		and a.person_id = obs.person_id
		and obs.snomed_concept_id in (169240004,169241000,408380008,169240004,169241000,408380008,414072005,407596008,407597004,414072005,407596008,407597004,40701008,105376000,105376000,433033007,431343007,434158009,431488007,433862009,434158009,445864005,760361000000100,760361000000100)

	group by a.person_id
	,	obs.clinical_effective_date
	,	obs.snomed_concept_id;

	-- generate person level data
	drop table if exists obs_person;
	create temporary table obs_person as
	select person_id
	,	min(smoking_inc_earliest) as smoking_inc_earliest
	,	min(smoking_exc_earliest) as smoking_exc_earliest
	,	min(diabetes_inc_earliest) as diabetes_inc_earliest
	,	min(diabetes_exc_earliest) as diabetes_exc_earliest
	,	min(htn_inc_earliest) as  htn_inc_earliest
	,	min(htn_exc_earliest) as htn_exc_earliest
	,	min(td_ihd_inc_earliest) as td_ihd_inc_earliest
	,	min(ti_ihd_inc_earliest) as ti_ihd_inc_earliest
	,	min(carc_inc_earliest) as carc_inc_earliest
	,	min(prolactinoma_earliest) as prolactinoma_earliest
	,	min(prolactin_result_earliest) as prolactin_result_earliest
	,	min(hyperprolactinaemia_earliest) as hyperprolactinaemia_earliest
	,	min(parkinsons_earliest) as parkinsons_earliest
	,	min(parkinsons_drug_marker_earliest) as parkinsons_drug_marker_earliest
	,	min(restless_legs_earliest) as restless_legs_earliest
	,	min(echo_earliest) as echo_earliest
	,	max(echo_latest) as echo_latest
	,	min(gp_heart_failure_earliest) as gp_heart_failure_earliest
	,	min(valve_replacement_earliest) as valve_replacement_earliest
	,	min(valvular_disease_earliest) as valvular_disease_earliest
	,	min(hf_admission_earliest) as hf_admission_earliest
	,	min(hf_drug_marker_earliest) as hf_drug_marker_earliest

	from F50_cab_observations group by person_id;

	-- select * from F50_cab_observations

	-- create final output dataset
	drop table if exists F50_cab_observations_person;
	create table F50_cab_observations_person as
	select a.*
	, b.echo_count
	, case
		when coalesce(echo_count,0) = 0 then NULL
		when echo_count = 1 then 0 -- return zero in case of a single echo
		else datediff(echo_latest, echo_earliest) / b.echo_count
	  end as ave_inter_echo_days

	from obs_person as a
	left outer join
		(
			select count(*) as echo_count
			,	person_id

			from echos

			group by person_id
		) as b
	on a.person_id = b.person_id;
	create index person_id on F50_cab_observations_person(person_id);

    -- drop temp tables
    drop table if exists F50_cab_obs_temp;
    drop table if exists F50_obs_out_tmp;
    drop table if exists cohort;
    drop table if exists echos;
    drop table if exists obs_person;
    drop table if exists F50_cab_observations_temp;

END;
// DELIMITER ;
